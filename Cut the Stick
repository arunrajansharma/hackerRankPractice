You are given NN sticks, where the length of each stick is a positive integer. A cut operation is performed on the sticks such that all of them are reduced by the length of the smallest stick.

Suppose we have six sticks of the following lengths:
5 4 4 2 2 8

Then, in one cut operation we make a cut of length 2 from each of the six sticks. For the next cut operation four sticks are left (of non-zero length), whose lengths are the following: 
3 2 2 6

The above step is repeated until no sticks are left.

Given the length of NN sticks, print the number of sticks that are left before each subsequent cut operations.

Note: For each cut operation, you have to recalcuate the length of smallest sticks (excluding zero-length sticks).





import java.io.*;
import java.util.*;
import java.text.*;
import java.math.*;
import java.util.regex.*;









public class Solution {

    static int firstPositive(int[] arr){
    
    if(arr[arr.length - 1] == 0) return -1;
   
    for(int i=0;i<arr.length;i++){
        
        if( arr[i] ==0 && arr[i+1] >0 ) return (i+1) ;
    }
    
    return 0;
}
     static int tellCount(int[] arr){
    int count =0;
    for(int i=0;i<arr.length;i++ ){
        if( arr[i] >0 ) count++;
    }
    
    return count;
 }
    public static void main(String[] args) {
        Scanner in = new Scanner(System.in);
        int n = in.nextInt();
        int arr[] = new int[n];
        for(int arr_i=0; arr_i < n; arr_i++){
            arr[arr_i] = in.nextInt();
        }
        
        
        
        int count  = n;
        
        while(count >0){
            
            System.out.println(count); 
        
            Arrays.sort(arr); 
            
            if(arr[0] != 0){
            
            int cut = arr[0];
            for(int i=0;i<arr.length;i++){
                arr[i]-=cut;
            }
                
             count = tellCount(arr);   
                
            }
            
            else{
                int index = firstPositive(arr);
                if(index == -1)
                    break;
                
                int cut = arr[index] ;
                for(int i=index;i<arr.length;i++){
                    arr[i]-=cut;
                }
                
                count = tellCount(arr);
            }
            
        
        
        }// end of while
        
        
    }
}
